`timescale 1ns / 1ps
///////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    15:16 09/27/2013 
// Design Name: 
// Module Name:    hamming
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 入力に対してハミング窓をかける
// 				
// 				
// Dependencies: 
// 
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
// 
// 
// 
// 
///////////////////////////////////////////////////////////////////////////////
module hamming(clk,sclk,reset, x_i, dv,x_o, done);

   parameter BWIDTH_IN=16;    //!< データ用レジスタのビット幅
   parameter BWIDTH_OUT=30;   //!< 出力のビット幅
   parameter AWIDTH=9;        //!< インデックスのサイズ
   parameter WORDS=400;       //!< 入力するデータの幅

   input clk;                           //!< clock
   input write;                         //!< data input timing
   input reset;		             //!<
   input signed [BWIDTH_IN-1:0] x_i;    //!< Input Data
   output signed [BWIDTH_OUT-1:0] x_o;  //!< Output Data
   output 			  dv;                           //!< Data Valid
   output 			  done;                         //!< 規定幅まで掛け終わったら立つ
   reg signed [BWIDTH_OUT-1:0] 	  x_o=0;   //!<
   reg 				  dv=0;
   reg 				  done=0;

   //*		other register		*//
   reg [AWIDTH-1:0] 		  index=0;

   //-------------------------------------------------------------------
   // Data input
   // 1 data per 1 clock
   always@(posedge clk or negedge reset)begin
      if(!reset)begin
	 x_o<=0;
	 dv<=0;
	 done<=0;
	 index<=0;
	 hamweight<=0;
	 
      end else begin

`include "ham16khz.dat"
	 if(write==1)begin
	    if(index==WORDS-1)begin
	       index<=0;
	       done<=1;
	    end else begin
	       index<=index+1;
	    end
	    x_o<=x_i*hamweight;
	 end else begin
	    done<=0;
	 end
      endcase
end
end

endmodule






