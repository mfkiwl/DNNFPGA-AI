////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: P.20131013
//  \   \         Application: netgen
//  /   /         Filename: multiplier.v
// /___/   /\     Timestamp: WED 14 JAN 11:29:0 2015
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -w -sim -ofmt verilog C:/.Xilinx/HMM-Viterbi/ipcore_dir/tmp/_cg/multiplier.ngc C:/.Xilinx/HMM-Viterbi/ipcore_dir/tmp/_cg/multiplier.v 
// Device	: 6slx45csg324-2
// Input file	: C:/.Xilinx/HMM-Viterbi/ipcore_dir/tmp/_cg/multiplier.ngc
// Output file	: C:/.Xilinx/HMM-Viterbi/ipcore_dir/tmp/_cg/multiplier.v
// # of Modules	: 1
// Design Name	: multiplier
// Xilinx        : C:\Xilinx\14.7\ISE_DS\ISE\
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module multiplier (
a, b, p
)/* synthesis syn_black_box syn_noprune=1 */;
  input [19 : 0] a;
  input [13 : 0] b;
  output [15 : 0] p;
  
  // synthesis translate_off
  
  wire \blk00000001/sig00000070 ;
  wire \blk00000001/sig0000006f ;
  wire \blk00000001/sig0000006e ;
  wire \blk00000001/sig0000006d ;
  wire \blk00000001/sig0000006c ;
  wire \blk00000001/sig0000006b ;
  wire \blk00000001/sig0000006a ;
  wire \blk00000001/sig00000069 ;
  wire \blk00000001/sig00000068 ;
  wire \blk00000001/sig00000067 ;
  wire \blk00000001/sig00000066 ;
  wire \blk00000001/sig00000065 ;
  wire \blk00000001/sig00000064 ;
  wire \blk00000001/sig00000063 ;
  wire \blk00000001/sig00000062 ;
  wire \blk00000001/sig00000061 ;
  wire \blk00000001/sig00000060 ;
  wire \blk00000001/sig0000005f ;
  wire \blk00000001/sig0000005e ;
  wire \blk00000001/sig0000005d ;
  wire \blk00000001/sig0000005c ;
  wire \blk00000001/sig0000005b ;
  wire \blk00000001/sig0000005a ;
  wire \blk00000001/sig00000059 ;
  wire \blk00000001/sig00000058 ;
  wire \blk00000001/sig00000057 ;
  wire \blk00000001/sig00000056 ;
  wire \blk00000001/sig00000055 ;
  wire \blk00000001/sig00000054 ;
  wire \blk00000001/sig00000053 ;
  wire \blk00000001/sig00000052 ;
  wire \blk00000001/sig00000051 ;
  wire \blk00000001/sig00000050 ;
  wire \blk00000001/sig0000004f ;
  wire \blk00000001/sig0000004e ;
  wire \blk00000001/sig0000004d ;
  wire \blk00000001/sig0000004c ;
  wire \blk00000001/sig0000004b ;
  wire \blk00000001/sig0000004a ;
  wire \blk00000001/sig00000049 ;
  wire \blk00000001/sig00000048 ;
  wire \blk00000001/sig00000047 ;
  wire \blk00000001/sig00000046 ;
  wire \blk00000001/sig00000045 ;
  wire \blk00000001/sig00000044 ;
  wire \blk00000001/sig00000043 ;
  wire \blk00000001/sig00000042 ;
  wire \blk00000001/sig00000041 ;
  wire \blk00000001/sig00000040 ;
  wire \blk00000001/sig0000003f ;
  wire \blk00000001/sig0000003e ;
  wire \blk00000001/sig0000003d ;
  wire \blk00000001/sig0000003c ;
  wire \blk00000001/sig0000003b ;
  wire \blk00000001/sig0000003a ;
  wire \blk00000001/sig00000039 ;
  wire \blk00000001/sig00000038 ;
  wire \blk00000001/sig00000037 ;
  wire \blk00000001/sig00000036 ;
  wire \blk00000001/sig00000035 ;
  wire \blk00000001/sig00000024 ;
  wire \blk00000001/sig00000023 ;
  wire \NLW_blk00000001/blk00000032_CARRYOUTF_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_CARRYOUT_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<47>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<46>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<45>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<44>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<43>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<42>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<41>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<40>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<39>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<38>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<37>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<36>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<35>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<34>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<33>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<32>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_P<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<35>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<34>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<33>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<32>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000032_M<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000021_O_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000012_O_UNCONNECTED ;
  LUT2 #(
    .INIT ( 4'h8 ))
  \blk00000001/blk00000042  (
    .I0(b[0]),
    .I1(a[0]),
    .O(\blk00000001/sig00000070 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000041  (
    .I0(b[10]),
    .I1(a[0]),
    .I2(b[9]),
    .I3(a[1]),
    .O(\blk00000001/sig00000048 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000040  (
    .I0(b[10]),
    .I1(a[1]),
    .I2(b[11]),
    .I3(a[0]),
    .O(\blk00000001/sig00000047 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk0000003f  (
    .I0(b[11]),
    .I1(a[1]),
    .I2(b[12]),
    .I3(a[0]),
    .O(\blk00000001/sig00000046 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk0000003e  (
    .I0(b[12]),
    .I1(a[1]),
    .I2(b[13]),
    .I3(a[0]),
    .O(\blk00000001/sig00000045 )
  );
  LUT3 #(
    .INIT ( 8'h28 ))
  \blk00000001/blk0000003d  (
    .I0(b[13]),
    .I1(a[1]),
    .I2(a[0]),
    .O(\blk00000001/sig00000044 )
  );
  LUT3 #(
    .INIT ( 8'h28 ))
  \blk00000001/blk0000003c  (
    .I0(b[13]),
    .I1(a[1]),
    .I2(a[0]),
    .O(\blk00000001/sig00000043 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk0000003b  (
    .I0(b[0]),
    .I1(a[1]),
    .I2(b[1]),
    .I3(a[0]),
    .O(\blk00000001/sig00000051 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk0000003a  (
    .I0(b[1]),
    .I1(a[1]),
    .I2(b[2]),
    .I3(a[0]),
    .O(\blk00000001/sig00000050 )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000039  (
    .I0(b[2]),
    .I1(a[1]),
    .I2(b[3]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004f )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000038  (
    .I0(b[3]),
    .I1(a[1]),
    .I2(b[4]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004e )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000037  (
    .I0(b[4]),
    .I1(a[1]),
    .I2(b[5]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004d )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000036  (
    .I0(b[5]),
    .I1(a[1]),
    .I2(b[6]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004c )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000035  (
    .I0(b[6]),
    .I1(a[1]),
    .I2(b[7]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004b )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000034  (
    .I0(b[7]),
    .I1(a[1]),
    .I2(b[8]),
    .I3(a[0]),
    .O(\blk00000001/sig0000004a )
  );
  LUT4 #(
    .INIT ( 16'h7888 ))
  \blk00000001/blk00000033  (
    .I0(b[8]),
    .I1(a[1]),
    .I2(b[9]),
    .I3(a[0]),
    .O(\blk00000001/sig00000049 )
  );
  DSP48A1 #(
    .A0REG ( 0 ),
    .A1REG ( 0 ),
    .B0REG ( 0 ),
    .B1REG ( 0 ),
    .CARRYINREG ( 0 ),
    .CARRYINSEL ( "OPMODE5" ),
    .CREG ( 0 ),
    .DREG ( 0 ),
    .MREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 0 ),
    .RSTTYPE ( "SYNC" ),
    .CARRYOUTREG ( 0 ))
  \blk00000001/blk00000032  (
    .CECARRYIN(\blk00000001/sig00000024 ),
    .RSTC(\blk00000001/sig00000024 ),
    .RSTCARRYIN(\blk00000001/sig00000024 ),
    .CED(\blk00000001/sig00000024 ),
    .RSTD(\blk00000001/sig00000024 ),
    .CEOPMODE(\blk00000001/sig00000024 ),
    .CEC(\blk00000001/sig00000024 ),
    .CARRYOUTF(\NLW_blk00000001/blk00000032_CARRYOUTF_UNCONNECTED ),
    .RSTOPMODE(\blk00000001/sig00000024 ),
    .RSTM(\blk00000001/sig00000024 ),
    .CLK(\blk00000001/sig00000023 ),
    .RSTB(\blk00000001/sig00000024 ),
    .CEM(\blk00000001/sig00000024 ),
    .CEB(\blk00000001/sig00000024 ),
    .CARRYIN(\blk00000001/sig00000024 ),
    .CEP(\blk00000001/sig00000024 ),
    .CEA(\blk00000001/sig00000024 ),
    .CARRYOUT(\NLW_blk00000001/blk00000032_CARRYOUT_UNCONNECTED ),
    .RSTA(\blk00000001/sig00000024 ),
    .RSTP(\blk00000001/sig00000024 ),
    .B({b[13], b[13], b[13], b[13], b[13], b[12], b[11], b[10], b[9], b[8], b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0]}),
    .BCOUT({\NLW_blk00000001/blk00000032_BCOUT<17>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<15>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<13>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<11>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<9>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<7>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<5>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_BCOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000032_BCOUT<0>_UNCONNECTED }),
    .PCIN({\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 }),
    .C({\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , \blk00000001/sig00000042 , 
\blk00000001/sig00000041 , \blk00000001/sig00000040 , \blk00000001/sig0000003f , \blk00000001/sig0000003e , \blk00000001/sig0000003d , 
\blk00000001/sig0000003c , \blk00000001/sig0000003b , \blk00000001/sig0000003a , \blk00000001/sig00000039 , \blk00000001/sig00000038 , 
\blk00000001/sig00000037 , \blk00000001/sig00000036 , \blk00000001/sig00000035 }),
    .P({\NLW_blk00000001/blk00000032_P<47>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<46>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<45>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<44>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<43>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<42>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<41>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<40>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<39>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<38>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<37>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<36>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<35>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<34>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<33>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<32>_UNCONNECTED , p[15], p[14], p[13], p[12], p[11], p[10], p[9], p[8]
, p[7], p[6], p[5], p[4], p[3], p[2], p[1], p[0], \NLW_blk00000001/blk00000032_P<15>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<13>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<12>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<11>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<10>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<9>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<7>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<6>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<5>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<4>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<3>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_P<1>_UNCONNECTED , \NLW_blk00000001/blk00000032_P<0>_UNCONNECTED }),
    .OPMODE({\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000023 , 
\blk00000001/sig00000023 , \blk00000001/sig00000024 , \blk00000001/sig00000023 }),
    .D({\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 , 
\blk00000001/sig00000024 , \blk00000001/sig00000024 , \blk00000001/sig00000024 }),
    .PCOUT({\NLW_blk00000001/blk00000032_PCOUT<47>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<46>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<45>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<44>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<43>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<41>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<40>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<39>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<38>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<37>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<35>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<34>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<33>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<32>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<31>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<29>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<28>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<27>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<26>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<25>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<23>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<22>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<21>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<20>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<19>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<17>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<15>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<13>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<11>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<9>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<7>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<5>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_PCOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000032_PCOUT<0>_UNCONNECTED }),
    .A({a[19], a[18], a[17], a[16], a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8], a[7], a[6], a[5], a[4], a[3], a[2]}),
    .M({\NLW_blk00000001/blk00000032_M<35>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<34>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<33>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<32>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<31>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<30>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<29>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<28>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<27>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<26>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<25>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<24>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<23>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<22>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<21>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<20>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<19>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<18>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<17>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<15>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<14>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<13>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<12>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<11>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<9>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<8>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<7>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<6>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<5>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<3>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<2>_UNCONNECTED , \NLW_blk00000001/blk00000032_M<1>_UNCONNECTED , 
\NLW_blk00000001/blk00000032_M<0>_UNCONNECTED })
  );
  MULT_AND   \blk00000001/blk00000031  (
    .I0(a[0]),
    .I1(b[0]),
    .LO(\blk00000001/sig0000006f )
  );
  MULT_AND   \blk00000001/blk00000030  (
    .I0(a[1]),
    .I1(b[0]),
    .LO(\blk00000001/sig0000006e )
  );
  MULT_AND   \blk00000001/blk0000002f  (
    .I0(a[1]),
    .I1(b[1]),
    .LO(\blk00000001/sig0000006d )
  );
  MULT_AND   \blk00000001/blk0000002e  (
    .I0(a[1]),
    .I1(b[2]),
    .LO(\blk00000001/sig0000006c )
  );
  MULT_AND   \blk00000001/blk0000002d  (
    .I0(a[1]),
    .I1(b[3]),
    .LO(\blk00000001/sig0000006b )
  );
  MULT_AND   \blk00000001/blk0000002c  (
    .I0(a[1]),
    .I1(b[4]),
    .LO(\blk00000001/sig0000006a )
  );
  MULT_AND   \blk00000001/blk0000002b  (
    .I0(a[1]),
    .I1(b[5]),
    .LO(\blk00000001/sig00000069 )
  );
  MULT_AND   \blk00000001/blk0000002a  (
    .I0(a[1]),
    .I1(b[6]),
    .LO(\blk00000001/sig00000068 )
  );
  MULT_AND   \blk00000001/blk00000029  (
    .I0(a[1]),
    .I1(b[7]),
    .LO(\blk00000001/sig00000067 )
  );
  MULT_AND   \blk00000001/blk00000028  (
    .I0(a[1]),
    .I1(b[8]),
    .LO(\blk00000001/sig00000066 )
  );
  MULT_AND   \blk00000001/blk00000027  (
    .I0(a[1]),
    .I1(b[9]),
    .LO(\blk00000001/sig00000065 )
  );
  MULT_AND   \blk00000001/blk00000026  (
    .I0(a[1]),
    .I1(b[10]),
    .LO(\blk00000001/sig00000064 )
  );
  MULT_AND   \blk00000001/blk00000025  (
    .I0(a[1]),
    .I1(b[11]),
    .LO(\blk00000001/sig00000063 )
  );
  MULT_AND   \blk00000001/blk00000024  (
    .I0(a[1]),
    .I1(b[12]),
    .LO(\blk00000001/sig00000062 )
  );
  MULT_AND   \blk00000001/blk00000023  (
    .I0(a[1]),
    .I1(b[13]),
    .LO(\blk00000001/sig00000061 )
  );
  MUXCY   \blk00000001/blk00000022  (
    .CI(\blk00000001/sig00000024 ),
    .DI(\blk00000001/sig0000006f ),
    .S(\blk00000001/sig00000070 ),
    .O(\blk00000001/sig00000060 )
  );
  XORCY   \blk00000001/blk00000021  (
    .CI(\blk00000001/sig00000024 ),
    .LI(\blk00000001/sig00000070 ),
    .O(\NLW_blk00000001/blk00000021_O_UNCONNECTED )
  );
  MUXCY   \blk00000001/blk00000020  (
    .CI(\blk00000001/sig00000060 ),
    .DI(\blk00000001/sig0000006e ),
    .S(\blk00000001/sig00000051 ),
    .O(\blk00000001/sig0000005f )
  );
  MUXCY   \blk00000001/blk0000001f  (
    .CI(\blk00000001/sig0000005f ),
    .DI(\blk00000001/sig0000006d ),
    .S(\blk00000001/sig00000050 ),
    .O(\blk00000001/sig0000005e )
  );
  MUXCY   \blk00000001/blk0000001e  (
    .CI(\blk00000001/sig0000005e ),
    .DI(\blk00000001/sig0000006c ),
    .S(\blk00000001/sig0000004f ),
    .O(\blk00000001/sig0000005d )
  );
  MUXCY   \blk00000001/blk0000001d  (
    .CI(\blk00000001/sig0000005d ),
    .DI(\blk00000001/sig0000006b ),
    .S(\blk00000001/sig0000004e ),
    .O(\blk00000001/sig0000005c )
  );
  MUXCY   \blk00000001/blk0000001c  (
    .CI(\blk00000001/sig0000005c ),
    .DI(\blk00000001/sig0000006a ),
    .S(\blk00000001/sig0000004d ),
    .O(\blk00000001/sig0000005b )
  );
  MUXCY   \blk00000001/blk0000001b  (
    .CI(\blk00000001/sig0000005b ),
    .DI(\blk00000001/sig00000069 ),
    .S(\blk00000001/sig0000004c ),
    .O(\blk00000001/sig0000005a )
  );
  MUXCY   \blk00000001/blk0000001a  (
    .CI(\blk00000001/sig0000005a ),
    .DI(\blk00000001/sig00000068 ),
    .S(\blk00000001/sig0000004b ),
    .O(\blk00000001/sig00000059 )
  );
  MUXCY   \blk00000001/blk00000019  (
    .CI(\blk00000001/sig00000059 ),
    .DI(\blk00000001/sig00000067 ),
    .S(\blk00000001/sig0000004a ),
    .O(\blk00000001/sig00000058 )
  );
  MUXCY   \blk00000001/blk00000018  (
    .CI(\blk00000001/sig00000058 ),
    .DI(\blk00000001/sig00000066 ),
    .S(\blk00000001/sig00000049 ),
    .O(\blk00000001/sig00000057 )
  );
  MUXCY   \blk00000001/blk00000017  (
    .CI(\blk00000001/sig00000057 ),
    .DI(\blk00000001/sig00000065 ),
    .S(\blk00000001/sig00000048 ),
    .O(\blk00000001/sig00000056 )
  );
  MUXCY   \blk00000001/blk00000016  (
    .CI(\blk00000001/sig00000056 ),
    .DI(\blk00000001/sig00000064 ),
    .S(\blk00000001/sig00000047 ),
    .O(\blk00000001/sig00000055 )
  );
  MUXCY   \blk00000001/blk00000015  (
    .CI(\blk00000001/sig00000055 ),
    .DI(\blk00000001/sig00000063 ),
    .S(\blk00000001/sig00000046 ),
    .O(\blk00000001/sig00000054 )
  );
  MUXCY   \blk00000001/blk00000014  (
    .CI(\blk00000001/sig00000054 ),
    .DI(\blk00000001/sig00000062 ),
    .S(\blk00000001/sig00000045 ),
    .O(\blk00000001/sig00000053 )
  );
  MUXCY   \blk00000001/blk00000013  (
    .CI(\blk00000001/sig00000053 ),
    .DI(\blk00000001/sig00000061 ),
    .S(\blk00000001/sig00000044 ),
    .O(\blk00000001/sig00000052 )
  );
  XORCY   \blk00000001/blk00000012  (
    .CI(\blk00000001/sig00000060 ),
    .LI(\blk00000001/sig00000051 ),
    .O(\NLW_blk00000001/blk00000012_O_UNCONNECTED )
  );
  XORCY   \blk00000001/blk00000011  (
    .CI(\blk00000001/sig0000005f ),
    .LI(\blk00000001/sig00000050 ),
    .O(\blk00000001/sig00000035 )
  );
  XORCY   \blk00000001/blk00000010  (
    .CI(\blk00000001/sig0000005e ),
    .LI(\blk00000001/sig0000004f ),
    .O(\blk00000001/sig00000036 )
  );
  XORCY   \blk00000001/blk0000000f  (
    .CI(\blk00000001/sig0000005d ),
    .LI(\blk00000001/sig0000004e ),
    .O(\blk00000001/sig00000037 )
  );
  XORCY   \blk00000001/blk0000000e  (
    .CI(\blk00000001/sig0000005c ),
    .LI(\blk00000001/sig0000004d ),
    .O(\blk00000001/sig00000038 )
  );
  XORCY   \blk00000001/blk0000000d  (
    .CI(\blk00000001/sig0000005b ),
    .LI(\blk00000001/sig0000004c ),
    .O(\blk00000001/sig00000039 )
  );
  XORCY   \blk00000001/blk0000000c  (
    .CI(\blk00000001/sig0000005a ),
    .LI(\blk00000001/sig0000004b ),
    .O(\blk00000001/sig0000003a )
  );
  XORCY   \blk00000001/blk0000000b  (
    .CI(\blk00000001/sig00000059 ),
    .LI(\blk00000001/sig0000004a ),
    .O(\blk00000001/sig0000003b )
  );
  XORCY   \blk00000001/blk0000000a  (
    .CI(\blk00000001/sig00000058 ),
    .LI(\blk00000001/sig00000049 ),
    .O(\blk00000001/sig0000003c )
  );
  XORCY   \blk00000001/blk00000009  (
    .CI(\blk00000001/sig00000057 ),
    .LI(\blk00000001/sig00000048 ),
    .O(\blk00000001/sig0000003d )
  );
  XORCY   \blk00000001/blk00000008  (
    .CI(\blk00000001/sig00000056 ),
    .LI(\blk00000001/sig00000047 ),
    .O(\blk00000001/sig0000003e )
  );
  XORCY   \blk00000001/blk00000007  (
    .CI(\blk00000001/sig00000055 ),
    .LI(\blk00000001/sig00000046 ),
    .O(\blk00000001/sig0000003f )
  );
  XORCY   \blk00000001/blk00000006  (
    .CI(\blk00000001/sig00000054 ),
    .LI(\blk00000001/sig00000045 ),
    .O(\blk00000001/sig00000040 )
  );
  XORCY   \blk00000001/blk00000005  (
    .CI(\blk00000001/sig00000053 ),
    .LI(\blk00000001/sig00000044 ),
    .O(\blk00000001/sig00000041 )
  );
  XORCY   \blk00000001/blk00000004  (
    .CI(\blk00000001/sig00000052 ),
    .LI(\blk00000001/sig00000043 ),
    .O(\blk00000001/sig00000042 )
  );
  GND   \blk00000001/blk00000003  (
    .G(\blk00000001/sig00000024 )
  );
  VCC   \blk00000001/blk00000002  (
    .P(\blk00000001/sig00000023 )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
